import { xpRange } from '../lib/levelling.js'
import axios from 'axios'

// Definici√≥n de categor√≠as con validaci√≥n NSFW
const nsfwCategories = ['adultos', 'videos']
const tags = {
  'main': 'üú≤ ACERCA DE',
  'info': 'üìú INFO',
  'game': 'üéÆ JUEGOS',
  'downloader': 'üì• DESCARGAS',
  'econ': 'üí∞ ECONOMIA',
  'sticker': 'üñº STICKER',
  'audio': 'üéß AUDIO',
  'search': 'üîç BUSQUEDA',
  'convertidores': 'üîÑ CONVERTIDORES',
  'group': 'üë• GRUPO',
  'tools': 'üõ† TOOLS',
  'fun': 'üéâ FUN',
  'database': 'üóÑ DATABASE',
  'xp': '‚öîÔ∏è NIVEL',
  'owner': 'üëë OWNER',
  'netfree': 'üåê TOOLS NETFREE',
  ...(global.db.data.chats[m.chat]?.modohorny ? { // Solo incluye NSFW si est√° activado
    'adultos': 'üîû ADULTOS',
    'videos': 'üîû VIDEOS +18'
  } : {})
}

const handler = async (m, { conn }) => {
  try {
    // Obtener datos esenciales
    const name = await conn.getName(m.sender)
    const totalreg = Object.keys(global.db.data.users).length
    const muptime = formatUptime(process.uptime())
    const { level } = global.db.data.users[m.sender]
    const isNSFW = global.db.data.chats[m.chat]?.modohorny

    // Filtrar comandos disponibles
    const availableCommands = Object.values(global.plugins)
      .filter(p => !p.disabled)
      .reduce((acc, p) => {
        const cmdTags = Array.isArray(p.tags) ? p.tags : [p.tags]
        cmdTags.forEach(tag => {
          if (!acc[tag]) acc[tag] = []
          acc[tag].push(...(Array.isArray(p.help) ? p.help : [p.help]))
        })
        return acc
      }, {})

    // Construir men√∫ principal
    let menuText = `

*${toBold('Usuario:')}* ‚ñπ ${toBoldUnicode(name)} ‚óÉ
*${toBold('Nivel:')}* ‚ñπ ${level} ‚óÉ
*${toBold('Rango:')}* ‚ñπ ${totalreg} ‚óÉ
*${toBold('Activo:')}* ‚ñπ ${muptime} ‚óÉ

‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ú¶‚ùò‡ºª‡º∫‚ùò‚ú¶‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
„Äå *CONTACTO DEL MONARCA* „Äç
¬ª @SinNombre: https://wa.me/5215629885039

‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà
        *üú≤ COMANDOS DISPONIBLES üú≤*\n`

    // Generar lista de comandos con validaci√≥n NSFW
    for (const [tag, label] of Object.entries(tags)) {
      if (nsfwCategories.includes(tag) && !isNSFW) continue
      
      const cmds = availableCommands[tag] || []
      if (cmds.length === 0) continue

      menuText += `\n‚îå‚îÄ‚îÄ‚îÄ„Äé ${label} „Äè\n`
      menuText += cmds.map(cmd => `‚îÇ ‚û§ .${cmd}`).join('\n')
      menuText += `\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ú¶\n`
    }

    menuText += `\n‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà‚óà\n*¬´ El d√©bil no tiene derecho a elegir c√≥mo morir√° ¬ª*`

    // Configurar y enviar mensaje con imagen
    const thumb = await axios.get('https://i.ibb.co/RGPbSrLX/IMG-20250509-WA0013.jpg', {
      responseType: 'arraybuffer'
    })

    await conn.sendMessage(m.chat, {
      text: menuText.trim(),
      contextInfo: {
        externalAdReply: {
          title: 'üú≤ SYSTEM OF SHADOWS üú≤',
          body: `Usuario: ${toBoldUnicode(name)}`,
          thumbnail: thumb.data,
          mediaType: 1,
          renderLargerThumbnail: true,
          sourceUrl: 'https://wa.me/5215629885039'
        }
      }
    }, { quoted: m })

  } catch (e) {
    console.error('Error en el men√∫:', e)
    conn.reply(m.chat, '‚ùé Error cr√≠tico al generar el men√∫', m)
  }
}

// Funciones auxiliares
const toBold = text => `*${text}*`

const toBoldUnicode = text => text.split('').map(c => 
  ({
    A: 'ùóî', a: 'ùóÆ', B: 'ùóï', b: 'ùóØ', C: 'ùóñ', c: 'ùó∞',
    D: 'ùóó', d: 'ùó±', E: 'ùóò', e: 'ùó≤', F: 'ùóô', f: 'ùó≥',
    G: 'ùóö', g: 'ùó¥', H: 'ùóõ', h: 'ùóµ', I: 'ùóú', i: 'ùó∂',
    J: 'ùóù', j: 'ùó∑', K: 'ùóû', k: 'ùó∏', L: 'ùóü', l: 'ùóπ',
    M: 'ùó†', m: 'ùó∫', N: 'ùó°', n: 'ùóª', O: 'ùó¢', o: 'ùóº',
    P: 'ùó£', p: 'ùóΩ', Q: 'ùó§', q: 'ùóæ', R: 'ùó•', r: 'ùóø',
    S: 'ùó¶', s: 'ùòÄ', T: 'ùóß', t: 'ùòÅ', U: 'ùó®', u: 'ùòÇ',
    V: 'ùó©', v: 'ùòÉ', W: 'ùó™', w: 'ùòÑ', X: 'ùó´', x: 'ùòÖ',
    Y: 'ùó¨', y: 'ùòÜ', Z: 'ùó≠', z: 'ùòá',
    0: 'ùü¨', 1: 'ùü≠', 2: 'ùüÆ', 3: 'ùüØ', 4: 'ùü∞',
    5: 'ùü±', 6: 'ùü≤', 7: 'ùü≥', 8: 'ùü¥', 9: 'ùüµ'
  }[c] || c)).join('')

const formatUptime = seconds => {
  const h = Math.floor(seconds / 3600)
  const m = Math.floor((seconds % 3600) / 60)
  const s = Math.floor(seconds % 60)
  return `${h}h ${m}m ${s}s`
}

handler.help = ['menu']
handler.command = /^menu|men√∫|arise|despertar$/i
handler.register = false

export default handler
